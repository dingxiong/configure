# enable color support of ls and also add handy aliases
# note: ls in Mac is from BSD but different from ubuntu
export CLICOLOR=1
export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx

# set the bash prompts
PS1='\[\e[0;31m\]\u\[\e[m\] \[\e[0;36m\]\w\[\e[m\] \[\e[1;32m\]\$\[\e[m\] \[\e[0;37m\]'

# common commands alias
alias ll='ls -alFh'
alias la='ls -A'

alias vbr='vim ~/.bash_profile'
alias cbr='cat ~/.bash_profile'
alias sbr='source ~/.bash_profile'
alias vv='vim ~/.vimrc'
alias gg='git grep -n'
alias gf='git ls-files'

# grep colorful output
export GREP_OPTIONS="--color"

# set up bash-autocomplete
if [ -f $(brew --prefix)/etc/bash_completion ]; then
  . $(brew --prefix)/etc/bash_completion
fi

export EDITOR="vim"
export JAVA_HOME=$(/usr/libexec/java_home)
export TREEHOUSE=/Users/xiong_ding/airlab/repos/treehouse
export PROJ=$TREEHOUSE/projects
# alias gradle="$HOME/airlab/repos/treehouse/gradlew"
export REPO=/Users/xiong_ding/airlab/repos
export ABNB=$REPO/airbnb
export PATH=$TREEHOUSE:$JAVA_HOME/bin:$PATH:$REPO/sysops/optica_tools

export ebert_jar=$PROJ/ebert/service/build/libs/service-all.jar
export siskel_jar=$PROJ/siskel/build/libs/siskel-all.jar
export knight_jar=$PROJ/knight/service/build/libs/service-all.jar
export monami_jar=$PROJ/monami/service/build/libs/service-all.jar

# sync config related
export CONF_LOC=~/00git/configure
config_sync() {
	# target=${1#.} # remove possible dot symbol at the begin. See Shell-Parameter-Expansion tutorial
  cp ~/.bash_profile $CONF_LOC/mac_bash_profile
}
alias vimlinux="vim $CONF_LOC/linux_setup.sh"
alias get_linux_setup="echo 'curl https://raw.githubusercontent.com/dingxiong/configure/master/linux_setup.sh > linux_setup.sh && chmod +x linux_setup.sh'"

box_names='ebert-canary ebert-backfill siskel-test siskel-canary knight-test knight-mutation-publisher-test'
for name in $box_names; do
	export ${name//-/_}=$name.aws.airbnb.com # define box name. Hyphens in the name are replaced by underscore
	alias ssh_${name//-/_}="ssh \$${name//-/_}" # define the ssh command
done

boxes=(saturn=i-072669edc6681a4de ebert_shared=i-0528c3d342ba20ffa ebert_test=i-06854fbd7e614a675 ebert_staging=i-00cf667ca1f785443 oyster_task_runner=i-04ff7d4c20e9ff0a7 oyster_testing_task_runner=i-05912ded954e456c2 tensorflow_training=i-04b3612eb27c2666b)
for entry in ${boxes[@]}; do
    arr=(${entry//=/ }) # replace '=' with ' ' and parentheses makes it an array
    name=${arr[0]}; box=${arr[1]}
    export $name=$box.inst.aws.airbnb.com
    alias ssh_$name="ssh \$${name}" # must use double quote
done

alias ssh_next='ssh rc-next.musta.ch'

gt() { 
	target=
	case $1 in
			rep*) target= ;;
			tre*) target=treehouse ;;
			air*) target=airbnb ;;
			ebe*) target=treehouse/projects/ebert ;;
			i-*) target=$1.inst.aws.airbnb.com ;;
			*) target=$1 ;;
	esac
	case $1 in
		i-*) ssh $target ;;
		con*) cd $CONF_LOC ;;
		*) cd $REPO/$target ;;
	esac
}

# setup rbenv
eval "$(rbenv init -)"

alias cdair='cd $ABNB'
alias cdrepo='cd $REPO'
sc() { npm run -s sanity-check -- $1; }
cp2jar() { cp $1 $ABNB/../jars ; }
optica_hostnames() { optica role=$1 .hostname ; }

sync_ebert() {
    box=
    case $1 in
        tes*) box=$ebert_test ;;
        sta*) box=$ebert_staging ;;
        can*) box=$ebert_canary ;;
        sha*) box=$ebert_shared ;;
        bac*) box=$ebert_backfill ;;             
        sat*) box=$saturn ;;
    esac

    folder= 
    case $1 in
        sat*) folder="/home/xiong_ding/libs/ebert.jar" ;;
        *) folder="/home/xiong_ding/" ;;
    esac
    cd $PROJ/ebert/service &&
    gradlew shadowJar &&
    rsync -avz $ebert_jar xiong_ding@$box:$folder
}

sync_siskel() {
    box=
    case $1 in
        tes*) box=$siskel_test ;;
        can*) box=$siskel_canary ;;
    esac
    cd $PROJ/siskel &&
    gradlew shadowJar &&
    rsync -avz $siskel_jar xiong_ding@$box:/home/xiong_ding/
}

port_forwarding() {
    port=; box=
    case $1 in
        tes*) port=6566; box=$ebert_test ;;
        sta*) port=4435; box=$ebert_staging ;;
        can*) port=4434; box=$ebert_canary ;;
    esac
    ssh -L $port:localhost:$port $box -o UserKnownHostsFile=/dev/null  
}

alias sync_oyster_testing_task_runner='cd $PROJ/oyster/impl/oyster-helixtask && gradlew shadowJar && rsync -avz build/libs/oyster-task-runner-all.jar xiong_ding@$oyster_testing_task_runner:/home/xiong_ding/'
alias sync_oyster_task_runner='cd $PROJ/oyster/impl/oyster-helixtask && gradlew shadowJar && rsync -avz build/libs/oyster-task-runner-all.jar xiong_ding@$oyster_task_runner:/home/xiong_ding/'

alias sync_ebert_gem='rsync -avz /tmp/rb-gen/ebert-service-api-* xiong_ding@$saturn:/home/xiong_ding/libs'

# afdev
export DATA_DIR=$HOME/airlab/repos/data #PATH WHERE YOU CLONED THE DATA REPO
export AFDEV_HOST="i-0e275f14954a6a75e.inst.aws.airbnb.com" #CHOOSE A DIFFERENT HOST
export AFDEV_PORT=61913 #CHOOSE A DIFFERENT PORT
# optional
# export AFDEV_USER="conor_camp"

# AIRLAB-DO-NOT-MODIFY section:ShellWrapper {{{
# Airlab will only make edits inside these delimiters.

# Source Airlab's shell integration, if it exists.
if [ -e ~/.airlab/shellhelper.sh ]; then
  source ~/.airlab/shellhelper.sh
fi
# AIRLAB-DO-NOT-MODIFY section:ShellWrapper }}}
